{"version":3,"sources":["modules/PlaceComponent.js","modules/WeatherInfoComponent.js","App.js","index.js"],"names":["SearchBox","styled","form","ChoosePlaceLabel","span","WelcomeWeatherLogo","img","PlaceComponent","props","updatelong","updatelat","fetchWeather","src","onChange","e","target","value","placeholder","onSubmit","type","WeatherInfoIcons","Temperature","Humidity","Wind","pressure","Cloudcover","WeatherInfoLabel","WeatherInfoContainer","div","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","name","WeatherComponent","weather","hourly","temperature_2m","relativehumidity_2m","windspeed_120m","cloudcover_mid","Container","AppLabel","App","useState","lat","long","updateWeather","preventDefault","Axios","get","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAGMA,EAAYC,IAAOC,KAAV,sjBA4BTC,EAAmBF,IAAOG,KAAV,6GAMhBC,EAAqBJ,IAAOK,IAAV,qFA6BTC,EAxBQ,SAACC,GACtB,IAASC,EAAuCD,EAAvCC,WAAYC,EAA2BF,EAA3BE,UAAUC,EAAiBH,EAAjBG,aAC/B,OACE,qCACE,cAACN,EAAD,CAAoBO,IAAK,6CACzB,cAACT,EAAD,uCAED,uBACKU,SAAU,SAACC,GAAD,OAAOL,EAAWK,EAAEC,OAAOC,QACrCC,YAAY,+BAEd,uBACEJ,SAAU,SAACC,GAAD,OAAOJ,EAAUI,EAAEC,OAAOC,QACpCC,YAAY,6BAGhB,cAACjB,EAAD,CAAWkB,SAAUP,EAArB,SAGE,wBAAQQ,KAAM,SAAd,0BCzDKC,EAAmB,CAC5BC,YAAa,2CACbC,SAAU,wCACVC,KAAM,oCACNC,SAAU,wCACVC,WAAY,2CAIVC,EAAmBzB,IAAOG,KAAV,qKAsBhBuB,GAdc1B,IAAOK,IAAV,oFAKQL,IAAO2B,IAAV,uKASO3B,IAAO2B,IAAV,oKAQpBC,EAAgB5B,IAAO2B,IAAV,qJAObE,EAAW7B,IAAOK,IAAV,6DAIRyB,EAAY9B,IAAOG,KAAV,sLAWT4B,EAAuB,SAACxB,GAC1B,IAAOyB,EAAezB,EAAfyB,KAAMjB,EAASR,EAATQ,MACb,OACI,eAACa,EAAD,WACI,cAACC,EAAD,CAAUlB,IAAKQ,EAAiBa,KAChC,eAACF,EAAD,WACKf,EACD,+BAAOiB,WA6BRC,EAxBU,SAAC1B,GACtB,IAAO2B,EAAW3B,EAAX2B,QAGP,OACI,qCAII,cAACT,EAAD,2BACA,eAACC,EAAD,WACI,cAAC,EAAD,CAAsBM,KAAM,cAAejB,MAAK,OAAEmB,QAAF,IAAEA,OAAF,EAAEA,EAASC,OAAOC,eAAe,KACjF,cAAC,EAAD,CAAsBJ,KAAM,WAAYjB,MAAK,OAAEmB,QAAF,IAAEA,OAAF,EAAEA,EAASC,OAAOE,oBAAoB,KACnF,cAAC,EAAD,CAAsBL,KAAM,OAAQjB,MAAK,OAAEmB,QAAF,IAAEA,OAAF,EAAEA,EAASC,OAAOG,eAAe,KAC1E,cAAC,EAAD,CAAsBN,KAAM,aAAcjB,MAAK,OAAEmB,QAAF,IAAEA,OAAF,EAAEA,EAASC,OAAOI,eAAe,YCpE1FC,EAAYxC,IAAO2B,IAAV,oQAaTc,EAAWzC,IAAOG,KAAV,6GAMMH,IAAOG,KAAV,4IAsCFuC,MA9Bf,WAEE,MAAyBC,qBAAzB,mBAAOC,EAAP,KAAYnC,EAAZ,KACA,EAA2BkC,qBAA3B,mBAAOE,EAAP,KAAarC,EAAb,KACA,EAAiCmC,qBAAjC,mBAAOT,EAAP,KAAgBY,EAAhB,KACMpC,EAAY,iDAAG,WAAOG,GAAP,wFACnBA,EAAEkC,iBADiB,SAEIC,IAAMC,IAAN,0DAC8BL,EAD9B,sBAC+CC,EAD/C,uFAFJ,OAEbK,EAFa,OAOnBJ,EAAcI,EAASC,MAPJ,2CAAH,sDASlB,OAEE,eAACX,EAAD,WAEE,cAACC,EAAD,4BACCI,GAAQD,GAAOV,EACd,cAAC,EAAD,CAAkBA,QAASA,EAASU,IAAKA,EAAKC,KAAMA,IAGpD,cAAC,EAAD,CAAgBpC,UAAYA,EAAWD,WAAYA,EAAYE,aAAcA,QCpErF0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6de78108.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nconst SearchBox = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  margin: 20px;\r\n  border: black solid 1px;\r\n  border-radius: 2px;\r\n\r\n  & input {\r\n    padding: 400px;\r\n    font-size: 40px;\r\n    border: black solid 3px;\r\n    outline: none;\r\n    font-family: Montserrat;\r\n    font-weight: bold;\r\n  }\r\n  & button {\r\n    background-color: black;\r\n    font-size: 20px;\r\n    padding: 0 10px;\r\n    color: white;\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n    font-family: Montserrat;\r\n    font-weight: bold;\r\n  }\r\n`;\r\nconst ChoosePlaceLabel = styled.span`\r\n  color: black;\r\n  margin: 10px auto;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\nconst WelcomeWeatherLogo = styled.img`\r\n  width: 140px;\r\n  height: 140px;\r\n  margin: 40px auto;\r\n`;\r\nconst PlaceComponent = (props) => {\r\n  const {  updatelong, updatelat,fetchWeather } = props;\r\n  return (\r\n    <>\r\n      <WelcomeWeatherLogo src={\"/react-weather-app/icons/perfect-day.svg\"} />\r\n      <ChoosePlaceLabel>Find Weather of location</ChoosePlaceLabel>\r\n\r\n     <input\r\n          onChange={(e) => updatelong(e.target.value)}\r\n          placeholder=\"Enter longitude in degrees\"\r\n        /> \r\n        <input\r\n          onChange={(e) => updatelat(e.target.value)}\r\n          placeholder=\"Enter latiude in degrees\"\r\n        />\r\n\r\n      <SearchBox onSubmit={fetchWeather}>\r\n        \r\n        \r\n        <button type={\"submit\"}>Search</button>\r\n      </SearchBox>\r\n    </>\r\n  );\r\n};\r\nexport default PlaceComponent;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {WeatherIcons} from \"../App\";\r\n\r\nexport const WeatherInfoIcons = {\r\n    Temperature: \"/react-weather-app/icons/Temperature.svg\",\r\n    Humidity: \"/react-weather-app/icons/humidity.svg\",\r\n    Wind: \"/react-weather-app/icons/wind.svg\",\r\n    pressure: \"/react-weather-app/icons/pressure.svg\",\r\n    Cloudcover: \"/react-weather-app/icons/Cloudcover.svg\",\r\n};\r\n\r\n\r\nconst WeatherInfoLabel = styled.span`\r\n  margin: 20px 25px 10px;\r\n  text-transform: capitalize;\r\n  text-align: start;\r\n  width: 90%;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n`;\r\nconst WeatherIcon = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: 5px auto;\r\n`;\r\nconst WeatherContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  margin: 30px auto;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst WeatherInfoContainer = styled.div`\r\n  display: flex;\r\n  width: 90%;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  margin: 5px 10px;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\nconst InfoIcon = styled.img`\r\n  width: 36px;\r\n  height: 36px;\r\n`;\r\nconst InfoLabel = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 14px;\r\n  margin: 15px;\r\n  & span {\r\n    font-size: 12px;\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\n\r\nconst WeatherInfoComponent = (props) => {\r\n    const {name, value} = props;\r\n    return (\r\n        <InfoContainer>\r\n            <InfoIcon src={WeatherInfoIcons[name]}/>\r\n            <InfoLabel>\r\n                {value}\r\n                <span>{name}</span>\r\n            </InfoLabel>\r\n        </InfoContainer>\r\n    );\r\n};\r\nconst WeatherComponent = (props) => {\r\n    const {weather} = props;\r\n    \r\n    \r\n    return (\r\n        <>\r\n            \r\n            \r\n\r\n            <WeatherInfoLabel>Weather Info</WeatherInfoLabel>\r\n            <WeatherInfoContainer>\r\n                <WeatherInfoComponent name={\"Temperature\"} value={weather?.hourly.temperature_2m[0]}/>\r\n                <WeatherInfoComponent name={\"Humidity\"} value={weather?.hourly.relativehumidity_2m[0]}/>\r\n                <WeatherInfoComponent name={\"Wind\"} value={weather?.hourly.windspeed_120m[0]}/>\r\n                <WeatherInfoComponent name={\"Cloudcover\"} value={weather?.hourly.cloudcover_mid[0]}/>\r\n\r\n                \r\n\r\n\r\n            </WeatherInfoContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WeatherComponent;\r\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport PlaceComponent from \"./modules/PlaceComponent\";\nimport WeatherComponent from \"./modules/WeatherInfoComponent\";\n\nexport const WeatherIcons = {\n  \"01d\": \"/react-weather-app/icons/sunny.svg\",\n  \"01n\": \"/react-weather-app/icons/night.svg\",\n  \"02d\": \"/react-weather-app/icons/day.svg\",\n  \"02n\": \"/react-weather-app/icons/cloudy-night.svg\",\n  \"03d\": \"/react-weather-app/icons/cloudy.svg\",\n  \"03n\": \"/react-weather-app/icons/cloudy.svg\",\n  \"04d\": \"/react-weather-app/icons/perfect-day.svg\",\n  \"04n\": \"/react-weather-app/icons/cloudy-night.svg\",\n  \"09d\": \"/react-weather-app/icons/rain.svg\",\n  \"09n\": \"/react-weather-app/icons/rain-night.svg\",\n  \"10d\": \"/react-weather-app/icons/rain.svg\",\n  \"10n\": \"/react-weather-app/icons/rain-night.svg\",\n  \"11d\": \"/react-weather-app/icons/storm.svg\",\n  \"11n\": \"/react-weather-app/icons/storm.svg\",\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 380px;\n  padding: 20px 10px;\n  margin: auto;\n  border-radius: 4px;\n  box-shadow: 0 3px 6px 0 #555;\n  background: white;\n  font-family: Montserrat;\n`;\n\nconst AppLabel = styled.span`\n  color: black;\n  margin: 20px auto;\n  font-size: 18px;\n  font-weight: bold;\n`;\nconst CloseButton = styled.span`\n  padding: 2px 3px;\n  background-color: black;\n  border-radius: 50%;\n  color: white;\n  position: absolute;\n`;\n\nfunction App() {\n  \n  const [lat, updatelat] = useState();\n  const [long, updatelong] = useState();\n  const [weather, updateWeather] = useState();\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response = await Axios.get(\n      `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${long}&hourly=temperature_2m,relativehumidity_2m,cloudcover_mid,windspeed_120m\n\n      `,\n    );\n    updateWeather(response.data);\n  };\n  return (\n  \n    <Container>\n      \n      <AppLabel>CyWeather App</AppLabel>\n      {long && lat && weather ? (\n        <WeatherComponent weather={weather} lat={lat} long={long} />\n        \n      ) : (\n        <PlaceComponent updatelat= {updatelat} updatelong={updatelong} fetchWeather={fetchWeather} />\n      )}\n      \n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}